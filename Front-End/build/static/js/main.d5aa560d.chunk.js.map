{"version":3,"sources":["services/auth.service.js","components/login.component.js","components/register.component.js","services/auth-header.js","services/user.service.js","components/home.component.js","components/profile.component.js","common/EventBus.js","components/board-user.component.js","components/board-moderator.component.js","components/board-admin.component.js","components/Title/Title.js","components/Button/Button.js","components/ImageTile/ImageTile.js","components/ArtistName/ArtistName.js","components/DurationBar/DurationBar.js","components/ListItem/ListItem.js","containers/SongList/SongList.js","containers/Player/Player.js","App.js","serviceWorker.js","index.js","components/ListItem/ListItem.module.css","containers/Player/Player.module.css","components/Button/Button.module.css","components/ImageTile/ImageTile.module.css"],"names":["API_URL","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","email","parse","getItem","required","value","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","state","loading","message","e","this","setState","target","preventDefault","form","validateAll","checkBtn","context","_errors","length","AuthService","login","history","push","window","location","reload","error","resMessage","toString","src","alt","onSubmit","ref","c","htmlFor","type","name","onChange","validations","disabled","style","display","Component","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","authHeader","user","get","headers","Home","content","UserService","getPublicContent","Profile","redirect","userReady","currentUser","getCurrentUser","to","substring","substr","id","roles","map","index","key","eventBus","on","event","callback","document","addEventListener","detail","dispatch","dispatchEvent","CustomEvent","remove","removeEventListener","BoardUser","getUserBoard","status","EventBus","BoardModerator","getModeratorBoard","BoardAdmin","getAdminBoard","Title","children","Button","CSSTransition","in","isToggled","appear","timeout","classNames","onClick","click","toggledType","styles","icon","ImageTile","ArtistName","DurationBar","audioRef","songURL","onDragStart","playing","onDragIndicator","onAbort","console","log","audioComponent","audio","play","pause","onEnded","isShuffleOn","randomizeSong","onEnd","preload","ListItem","songIndex","ListItemContainer","ListItemImg","songIMG","TextContainer","artistName","SongName","songName","SongList","TransitionGroup","songArray","song","isOpen","Player","togglePlayModeHandler","playIsToggled","toggleMuteHandler","muteIsToggled","muted","backwardSongHandler","currentSongIndex","currentIndex","shuffleIsToggled","Math","floor","random","switchSongHandler","forwardSongHandler","repeatIsToggled","currentSong","switchSongFromList","listIsToggled","currentTarget","togglePlayerOptions","modeToggled","React","createRef","currentTimeElement","getElementsByClassName","songLength","Axios","songs","catch","togglePlayIcon","playerTitle","TopBar","SongInfo","el","PlayerControls","App","logOut","showModeratorBoard","showAdminBoard","undefined","includes","logout","href","exact","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.d5aa560d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API_URL = \"http://mcqueeninc.net/api/auth/\";\r\n\r\nclass AuthService {\r\n  login(username, password) {\r\n    return axios\r\n      .post(API_URL + \"signin\", {\r\n        username,\r\n        password\r\n      })\r\n      .then(response => {\r\n        if (response.data.accessToken) {\r\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\r\n        }\r\n\r\n        return response.data;\r\n      });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem(\"user\");\r\n  }\r\n\r\n  register(username, email, password) {\r\n    return axios.post(API_URL + \"signup\", {\r\n      username,\r\n      email,\r\n      password\r\n    });\r\n  }\r\n\r\n  getCurrentUser() {\r\n    return JSON.parse(localStorage.getItem('user'));;\r\n  }\r\n}\r\n\r\nexport default new AuthService();\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleLogin = this.handleLogin.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\",\r\n      loading: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleLogin(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      loading: true\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.login(this.state.username, this.state.password).then(\r\n        () => {\r\n          this.props.history.push(\"/profile\");\r\n          window.location.reload();\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            loading: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    } else {\r\n      this.setState({\r\n        loading: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleLogin}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"username\">Username</label>\r\n              <Input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                name=\"username\"\r\n                value={this.state.username}\r\n                onChange={this.onChangeUsername}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"password\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                value={this.state.password}\r\n                onChange={this.onChangePassword}\r\n                validations={[required]}\r\n              />\r\n            </div>\r\n\r\n            <div className=\"form-group\">\r\n              <button\r\n                className=\"btn btn-primary btn-block\"\r\n                disabled={this.state.loading}\r\n              >\r\n                {this.state.loading && (\r\n                  <span className=\"spinner-border spinner-border-sm\"></span>\r\n                )}\r\n                <span>Login</span>\r\n              </button>\r\n            </div>\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div className=\"alert alert-danger\" role=\"alert\">\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-validation/build/form\";\r\nimport Input from \"react-validation/build/input\";\r\nimport CheckButton from \"react-validation/build/button\";\r\nimport { isEmail } from \"validator\";\r\n\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nconst required = value => {\r\n  if (!value) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This field is required!\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst email = value => {\r\n  if (!isEmail(value)) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        This is not a valid email.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vusername = value => {\r\n  if (value.length < 3 || value.length > 20) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The username must be between 3 and 20 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst vpassword = value => {\r\n  if (value.length < 6 || value.length > 40) {\r\n    return (\r\n      <div className=\"alert alert-danger\" role=\"alert\">\r\n        The password must be between 6 and 40 characters.\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default class Register extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleRegister = this.handleRegister.bind(this);\r\n    this.onChangeUsername = this.onChangeUsername.bind(this);\r\n    this.onChangeEmail = this.onChangeEmail.bind(this);\r\n    this.onChangePassword = this.onChangePassword.bind(this);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      email: \"\",\r\n      password: \"\",\r\n      successful: false,\r\n      message: \"\"\r\n    };\r\n  }\r\n\r\n  onChangeUsername(e) {\r\n    this.setState({\r\n      username: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangeEmail(e) {\r\n    this.setState({\r\n      email: e.target.value\r\n    });\r\n  }\r\n\r\n  onChangePassword(e) {\r\n    this.setState({\r\n      password: e.target.value\r\n    });\r\n  }\r\n\r\n  handleRegister(e) {\r\n    e.preventDefault();\r\n\r\n    this.setState({\r\n      message: \"\",\r\n      successful: false\r\n    });\r\n\r\n    this.form.validateAll();\r\n\r\n    if (this.checkBtn.context._errors.length === 0) {\r\n      AuthService.register(\r\n        this.state.username,\r\n        this.state.email,\r\n        this.state.password\r\n      ).then(\r\n        response => {\r\n          this.setState({\r\n            message: response.data.message,\r\n            successful: true\r\n          });\r\n        },\r\n        error => {\r\n          const resMessage =\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n\r\n          this.setState({\r\n            successful: false,\r\n            message: resMessage\r\n          });\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"col-md-12\">\r\n        <div className=\"card card-container\">\r\n          <img\r\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\r\n            alt=\"profile-img\"\r\n            className=\"profile-img-card\"\r\n          />\r\n\r\n          <Form\r\n            onSubmit={this.handleRegister}\r\n            ref={c => {\r\n              this.form = c;\r\n            }}\r\n          >\r\n            {!this.state.successful && (\r\n              <div>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"username\">Username</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"username\"\r\n                    value={this.state.username}\r\n                    onChange={this.onChangeUsername}\r\n                    validations={[required, vusername]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    name=\"email\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChangeEmail}\r\n                    validations={[required, email]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <Input\r\n                    type=\"password\"\r\n                    className=\"form-control\"\r\n                    name=\"password\"\r\n                    value={this.state.password}\r\n                    onChange={this.onChangePassword}\r\n                    validations={[required, vpassword]}\r\n                  />\r\n                </div>\r\n\r\n                <div className=\"form-group\">\r\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {this.state.message && (\r\n              <div className=\"form-group\">\r\n                <div\r\n                  className={\r\n                    this.state.successful\r\n                      ? \"alert alert-success\"\r\n                      : \"alert alert-danger\"\r\n                  }\r\n                  role=\"alert\"\r\n                >\r\n                  {this.state.message}\r\n                </div>\r\n              </div>\r\n            )}\r\n            <CheckButton\r\n              style={{ display: \"none\" }}\r\n              ref={c => {\r\n                this.checkBtn = c;\r\n              }}\r\n            />\r\n          </Form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","export default function authHeader() {\r\n  const user = JSON.parse(localStorage.getItem('user'));\r\n\r\n  if (user && user.accessToken) {\r\n    // return { Authorization: 'Bearer ' + user.accessToken }; // for Spring Boot back-end\r\n    return { 'x-access-token': user.accessToken };       // for Node.js Express back-end\r\n  } else {\r\n    return {};\r\n  }\r\n}\r\n","import axios from 'axios';\r\nimport authHeader from './auth-header';\r\n\r\nconst API_URL = 'http://mcqueeninc.net/api/test/';\r\n\r\nclass UserService {\r\n  getPublicContent() {\r\n    return axios.get(API_URL + 'all');\r\n  }\r\n\r\n  getUserBoard() {\r\n    return axios.get(API_URL + 'user', { headers: authHeader() });\r\n  }\r\n\r\n  getModeratorBoard() {\r\n    return axios.get(API_URL + 'mod', { headers: authHeader() });\r\n  }\r\n\r\n  getAdminBoard() {\r\n    return axios.get(API_URL + 'admin', { headers: authHeader() });\r\n  }\r\n}\r\n\r\nexport default new UserService();\r\n","import React, { Component } from \"react\";\r\nimport UserService from \"../services/user.service\";\r\n\r\nexport default class Home extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getPublicContent().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response && error.response.data) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport AuthService from \"../services/auth.service\";\r\n\r\nexport default class Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      redirect: null,\r\n      userReady: false,\r\n      currentUser: { username: \"\" }\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const currentUser = AuthService.getCurrentUser();\r\n\r\n    if (!currentUser) this.setState({ redirect: \"/home\" });\r\n    this.setState({ currentUser: currentUser, userReady: true })\r\n  }\r\n\r\n  render() {\r\n    if (this.state.redirect) {\r\n      return <Redirect to={this.state.redirect} />\r\n    }\r\n\r\n    const { currentUser } = this.state;\r\n\r\n    return (\r\n      <div className=\"container\">\r\n        {(this.state.userReady) ?\r\n        <div>\r\n        <header className=\"jumbotron\">\r\n          <h3>\r\n            <strong>{currentUser.username}</strong> Profile\r\n          </h3>\r\n        </header>\r\n        <p>\r\n          <strong>Token:</strong>{\" \"}\r\n          {currentUser.accessToken.substring(0, 20)} ...{\" \"}\r\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\r\n        </p>\r\n        <p>\r\n          <strong>Id:</strong>{\" \"}\r\n          {currentUser.id}\r\n        </p>\r\n        <p>\r\n          <strong>Email:</strong>{\" \"}\r\n          {currentUser.email}\r\n        </p>\r\n        <strong>Authorities:</strong>\r\n        <ul>\r\n          {currentUser.roles &&\r\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\r\n        </ul>\r\n      </div>: null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const eventBus = {\r\n  on(event, callback) {\r\n    document.addEventListener(event, (e) => callback(e.detail));\r\n  },\r\n  dispatch(event, data) {\r\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\r\n  },\r\n  remove(event, callback) {\r\n    document.removeEventListener(event, callback);\r\n  },\r\n};\r\n\r\nexport default eventBus;\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nexport default class BoardUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getUserBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nexport default class BoardModerator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getModeratorBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\n\r\nimport UserService from \"../services/user.service\";\r\nimport EventBus from \"../common/EventBus\";\r\n\r\nexport default class BoardAdmin extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      content: \"\"\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    UserService.getAdminBoard().then(\r\n      response => {\r\n        this.setState({\r\n          content: response.data\r\n        });\r\n      },\r\n      error => {\r\n        this.setState({\r\n          content:\r\n            (error.response &&\r\n              error.response.data &&\r\n              error.response.data.message) ||\r\n            error.message ||\r\n            error.toString()\r\n        });\r\n\r\n        if (error.response && error.response.status === 401) {\r\n          EventBus.dispatch(\"logout\");\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <header className=\"jumbotron\">\r\n          <h3>{this.state.content}</h3>\r\n        </header>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nconst Title = (props) => {\r\n    return (\r\n        <>\r\n          <h1 style={{'position': 'relative', 'top': '1vh', 'fontSize': '1.2rem'}}>{props.children}</h1>   \r\n        </>\r\n    );\r\n};\r\n\r\nexport default Title;","import React from 'react';\r\nimport styles from './Button.module.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nconst Button = (props) => {\r\n    return (\r\n        <>\r\n        <CSSTransition\r\n                in={props.isToggled}\r\n                appear={true}\r\n                timeout={300}\r\n                classNames='fade'>\r\n        <button ref={props.ref} \r\n                 onClick={() => props.click(props.toggledType)} \r\n                 className={`${styles[props.type]}`}>\r\n                 <i className={`${props.icon} ${props.isToggled ? styles['ui-icon-toggled'] : ''}`}></i>\r\n                 {props.children}\r\n         </button>\r\n         </CSSTransition>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Button;","import React from 'react';\r\nimport styles from './ImageTile.module.css';\r\n\r\nconst ImageTile = (props) => {\r\n  return (\r\n    <div className={styles.ImageTile}>\r\n      <img src={props.src} alt={props.alt} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageTile;\r\n","import React from 'react';\r\nconst ArtistName = (props) => {\r\n    return (\r\n        <>\r\n          <p>{props.children}</p>  \r\n        </>\r\n    );\r\n};\r\n\r\nexport default ArtistName;","import React from 'react';\r\nimport H5AudioPlayer from 'react-h5-audio-player';\r\n\r\n\r\nconst DurationBar = (props) => {\r\n  return (\r\n    <div style={{'margin': '0 auto',\r\n                 'position': 'relative',\r\n                 'width': '98%'}}>\r\n                   {/* The core of this app that is responsible for playing the audio, calculating durations and calculating the indicators actions.\r\n                       For more info : https://github.com/lhz516/react-h5-audio-player */}\r\n             <H5AudioPlayer\r\n                     ref={props.audioRef}\r\n                     src={props.songURL}\r\n                    //  onCanPlay={() => {\r\n                    //    props.initializeTime();\r\n                    //  }}\r\n                     onDragStart={() =>{\r\n                       return props.playing ? null : props.onDragIndicator();            \r\n                     }}\r\n                     onAbort={() => {\r\n                       console.log(props.audioComponent.audio)\r\n                       \r\n                       return props.playing ? props.audioComponent.audio.play() : props.audioComponent.audio.pause();\r\n                     }}\r\n                     onEnded={() => {\r\n                       return props.isShuffleOn ? props.randomizeSong() : props.onEnd();\r\n                     }}\r\n                     preload='auto'\r\n                     />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DurationBar;","import React from 'react';\r\nimport styles from './ListItem.module.css';\r\nconst ListItem = (props) => {\r\n    return (\r\n        <div style={props.style} onClick={props.click} id={props.songIndex} className={styles.ListItemContainer}>\r\n          <img className={styles.ListItemImg} src={props.songIMG} alt='song cover'/>\r\n          <div className={styles.TextContainer}>\r\n          <p className={styles.ArtistName}>{props.artistName}</p>\r\n          <h1 className={styles.SongName}>{props.songName}</h1>\r\n          </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport ListItem from '../../components/ListItem/ListItem';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group'\r\nconst SongList = (props) => {\r\n\r\n    return (\r\n       \r\n        <div style={{'marginTop': '2vh'}}>\r\n        <TransitionGroup appear={true}>\r\n          {props.songArray.map( (song, index) => {\r\n             return (\r\n                <CSSTransition\r\n                in={props.isOpen}\r\n                appear={true}\r\n                timeout={600}\r\n                classNames='fade'>\r\n                 <ListItem key={index}\r\n                  style={{'transitionDelay': `${ index * .05 }s` }}\r\n                  click={props.click} \r\n                  songName={song.songName} \r\n                  songIndex={index}  \r\n                  artistName={song.artistName} \r\n                  songIMG={song.songIMG}/>\r\n                </CSSTransition>\r\n              )   \r\n          })}\r\n          </TransitionGroup>\r\n        </div>\r\n        \r\n    );\r\n};\r\n\r\nexport default SongList;","  import React, { Component } from 'react';\r\n  import styles from './Player.module.css';\r\n  import Title from '../../components/Title/Title';\r\n  import Button from '../../components/Button/Button';\r\n  import ImageTile from '../../components/ImageTile/ImageTile';\r\n  import ArtistName from '../../components/ArtistName/ArtistName';\r\n  import DurationBar from '../../components/DurationBar/DurationBar';\r\n  import {CSSTransition} from 'react-transition-group';\r\n  import Axios from 'axios';\r\n  import SongList from '../SongList/SongList';\r\n  class Player extends Component { \r\n    //Initialize variables and state \r\n    constructor(props){\r\n      super(props)\r\n      this.state = {\r\n        songArray: null,\r\n        currentSong: {},\r\n        currentSongIndex: 0,\r\n        shuffleIsToggled: false,\r\n        repeatIsToggled: false,\r\n        muteIsToggled: false,\r\n        playIsToggled: false,\r\n        listIsToggled: false\r\n      }\r\n      this.audioComponent = React.createRef();\r\n      this.currentTimeElement = document.getElementsByClassName('current-time');\r\n      this.songLength = document.getElementsByClassName('total-time');\r\n    }\r\n    //Calculate the minutes and seconds using song duration, output a formatted duration into the .total-time element\r\n    // initializeSongLengthFunction = () => {\r\n    //   if(this.state.currentSong.songURL){\r\n    //     let duration = this.audioComponent.audio.duration;\r\n    //     const seconds = Math.floor( duration % 60 );\r\n    //     const minutes = Math.floor( duration / 60 % 60 );\r\n    //     return this.songLength[0].innerHTML = (minutes < 10 ? '0' + minutes : minutes) + ':' + (seconds < 10 ? '0' + seconds : seconds);\r\n    //   } \r\n    // } \r\n    \r\n    //Initialize song length rendering and fetch songs information from firebase\r\n    componentDidMount() {\r\n      Axios.get('https://react-music-player-6bb10.firebaseio.com/Songs.json')\r\n      .then(response => {\r\n        const songs = response.data\r\n        //Assign the data that was fetched from the server and initialize the first song\r\n        this.setState({songArray: songs, currentSong: songs[this.state.currentSongIndex]}); \r\n        //Prevent audio from playing after load\r\n        this.audioComponent.audio.pause()\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n      //Calculate the length of the first song and display on load\r\n      // this.initializeSongLengthFunction();\r\n    }\r\n    //Toggle the playing state on click and play/pause the audio\r\n    togglePlayModeHandler = () => {\r\n      this.setState({playIsToggled: !this.state.playIsToggled});\r\n      this.state.playIsToggled ? this.audioComponent.audio.pause() : this.audioComponent.audio.play(); \r\n    }\r\n    //Toggling audio mute according to muteIsToggled state\r\n    toggleMuteHandler = () => {\r\n      return this.state.muteIsToggled ? this.audioComponent.audio.muted = false : this.audioComponent.audio.muted = true;\r\n    }\r\n    //Switch the song back\r\n    backwardSongHandler = () => {\r\n      //Checks if this is not the first song on the list\r\n      if(this.state.currentSongIndex > 0){\r\n        let currentIndex = this.state.currentSongIndex;\r\n        //If shuffle is toggled, Randomize a song\r\n        if(this.state.shuffleIsToggled){\r\n          currentIndex = Math.floor(Math.random() * this.state.songArray.length)\r\n        }else{ \r\n          currentIndex--\r\n        }\r\n        this.switchSongHandler(currentIndex);\r\n      }   \r\n    }\r\n    //Switch the song forward\r\n    forwardSongHandler = () => { \r\n      //Checks if the current song is not the last song on the list\r\n      if(this.state.currentSongIndex <= this.state.songArray.length - 1) {\r\n        let currentIndex = this.state.currentSongIndex;\r\n        //Checks if shuffle is toggled and if so, randomizes a song index\r\n        if(this.state.shuffleIsToggled){\r\n          currentIndex = Math.floor(Math.random() * this.state.songArray.length)\r\n        } //If this is the last song on the list and repeat is on, reset the current index\r\n        else if(this.state.currentSongIndex === this.state.songArray.length -1  && this.state.repeatIsToggled){\r\n          currentIndex = 0;\r\n          //If it's not the last song, add one to the current index\r\n        }else if(this.state.currentSongIndex < this.state.songArray.length - 1){\r\n          currentIndex++\r\n        }\r\n        this.switchSongHandler(currentIndex);\r\n      }  \r\n    }\r\n    //Universal function to switch the song via state and reassign the current song index\r\n    switchSongHandler = (index) => {\r\n      this.setState({currentSongIndex: index, currentSong: this.state.songArray[index]});\r\n    }\r\n    //Upon a click on each of the list items, close the list and switch to the chosen song\r\n    switchSongFromList = (event) => {\r\n      this.setState({listIsToggled: false});\r\n      this.switchSongHandler(event.currentTarget.id);\r\n    }\r\n    //Randomize song and switch, used to trigger shuffle on songs endings\r\n    randomizeSong = () => {\r\n      let currentIndex = Math.floor(Math.random() * this.state.songArray.length) ;\r\n      this.switchSongHandler(currentIndex)\r\n    }\r\n    \r\n    //Accepts the mode of the clicked button, toggles it and invoking the necessary functions related to the mode\r\n    togglePlayerOptions = (modeToggled) => {\r\n      switch(modeToggled) {\r\n        case 'shuffle':\r\n        return this.setState({shuffleIsToggled: !this.state.shuffleIsToggled});\r\n        case 'mute':\r\n        this.setState({muteIsToggled: !this.state.muteIsToggled});\r\n        return this.toggleMuteHandler() \r\n        case 'list':\r\n        return this.setState({listIsToggled: !this.state.listIsToggled, playIsToggled: false});\r\n        case 'repeat':\r\n        return this.setState({repeatIsToggled: !this.state.repeatIsToggled});\r\n        default:\r\n        return\r\n      }\r\n    }\r\n    render() { \r\n          \r\n      let togglePlayIcon = this.state.playIsToggled ? 'fas fa-pause fa-2x' : 'fas fa-play fa-2x';\r\n      let playerTitle = this.state.listIsToggled ? 'Elegir Canción' : 'Reproduciendo'\r\n      if(this.state.currentSong.songURL){\r\n        return <div style={{'width': '100%'}}>\r\n        <CSSTransition in={true} appear={true} timeout={300} classNames='fadeTopBar'>\r\n         <div className={styles.TopBar}>\r\n          {this.state.listIsToggled ? null : <Button isToggled={this.state.muteIsToggled} toggledType='mute' click={(modeToggled) => this.togglePlayerOptions(modeToggled)} type='ui-icon' icon='fas fa-volume-mute fa-2x' />}\r\n          <CSSTransition in={this.state.listIsToggled} timeout={300} classNames='textMove'>\r\n          <Title>{playerTitle}</Title>\r\n          </CSSTransition>\r\n         <Button isToggled={this.state.listIsToggled} toggledType='list' click={(modeToggled) => this.togglePlayerOptions(modeToggled)} type='ui-icon' icon='fas fa-list-ul fa-2x' />\r\n       </div>\r\n       </CSSTransition>\r\n       <>\r\n       {this.state.listIsToggled ? <SongList click={(event) => this.switchSongFromList(event)} songArray={this.state.songArray} isOpen={this.state.listIsToggled}/> :\r\n       \r\n       <>\r\n       <CSSTransition in={true} appear={true} timeout={300} classNames='fade'>\r\n        <ImageTile src={this.state.currentSong.songIMG} alt='Song Cover' />\r\n       </CSSTransition>\r\n       \r\n     <CSSTransition in={true} appear={true} timeout={300} classNames='fadeTopBar'>\r\n        <div style={{'transitionDelay': '400ms'}}>\r\n         <div className={styles.SongInfo}>\r\n          <div> \r\n           <Title>{this.state.currentSong.songName}</Title>\r\n           <ArtistName>{this.state.currentSong.artistName}</ArtistName>\r\n         </div>\r\n        </div> \r\n        \r\n      {/*The duration bar holds inside the H5AudioComponent that is being used as the audio managing component.\r\n         This component is responsible for the audio playing, calculating and displaying durations and applying the seeking function according to the indicator*/}\r\n       <DurationBar isShuffleOn={this.state.shuffleIsToggled} randomizeSong={this.randomizeSong} onEnd={this.forwardSongHandler} onDragIndicator={this.togglePlayModeHandler} audioComponent={this.audioComponent} \r\n      //  initializeTime={this.initializeSongLengthFunction} \r\n       audioRef={el => (this.audioComponent = el)} songURL={this.state.currentSong.songURL} playing={this.state.playIsToggled}/>\r\n\r\n       <div className={styles.PlayerControls}>\r\n        <Button isToggled={this.state.shuffleIsToggled} toggledType='shuffle' click={(modeToggled) => this.togglePlayerOptions(modeToggled)} type='player-flow-control' icon='fas fa-random' />\r\n        <Button click={this.backwardSongHandler} type='player-switch-control' icon='fas fa-step-backward' />\r\n        <Button click={this.togglePlayModeHandler} type='player-play-control' icon={togglePlayIcon} />\r\n        <Button click={this.forwardSongHandler} type='player-switch-control' icon='fas fa-step-forward' />\r\n        <Button isToggled={this.state.repeatIsToggled} toggledType='repeat' click={(modeToggled) => this.togglePlayerOptions(modeToggled)} type='player-flow-control' icon='fas fa-redo' />\r\n       </div>\r\n      </div>\r\n     </CSSTransition>\r\n      </>\r\n       }\r\n       </>\r\n     </div>   \r\n      }else{\r\n       return <div className=\"loader\">Loading...</div>;\r\n      };\r\n    }\r\n  }\r\n  \r\n  \r\n  export default Player;","import React, { Component } from \"react\";\r\nimport { Switch, Route, Link } from \"react-router-dom\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\n\r\nimport AuthService from \"./services/auth.service\";\r\n\r\nimport Login from \"./components/login.component\";\r\nimport Register from \"./components/register.component\";\r\nimport Home from \"./components/home.component\";\r\nimport Profile from \"./components/profile.component\";\r\nimport BoardUser from \"./components/board-user.component\";\r\nimport BoardModerator from \"./components/board-moderator.component\";\r\nimport BoardAdmin from \"./components/board-admin.component\";\r\nimport Player from \"./containers/Player/Player\";\r\n\r\n// import AuthVerify from \"./common/auth-verify\";\r\nimport EventBus from \"./common/EventBus\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.logOut = this.logOut.bind(this);\r\n\r\n    this.state = {\r\n      showModeratorBoard: false,\r\n      showAdminBoard: false,\r\n      currentUser: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const user = AuthService.getCurrentUser();\r\n\r\n    if (user) {\r\n      this.setState({\r\n        currentUser: user,\r\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\r\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\r\n      });\r\n    }\r\n    \r\n    EventBus.on(\"logout\", () => {\r\n      this.logOut();\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    EventBus.remove(\"logout\");\r\n  }\r\n\r\n  logOut() {\r\n    AuthService.logout();\r\n    this.setState({\r\n      showModeratorBoard: false,\r\n      showAdminBoard: false,\r\n      currentUser: undefined,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\r\n\r\n    return (\r\n      <>\r\n      <div>\r\n        <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\r\n          <Link to={\"/Player\"} className=\"navbar-brand\">\r\n            Music Player \r\n          </Link>\r\n          <div className=\"navbar-nav mr-auto\">\r\n            <li className=\"nav-item\">\r\n              <Link to={\"/home\"} className=\"nav-link\">\r\n                Home\r\n              </Link>\r\n            </li>\r\n\r\n            {showModeratorBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/mod\"} className=\"nav-link\">\r\n                  Moderator Board\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            {showAdminBoard && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/admin\"} className=\"nav-link\">\r\n                  Admin Board\r\n                </Link>\r\n              </li>\r\n            )}\r\n\r\n            {currentUser && (\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/user\"} className=\"nav-link\">\r\n                  User\r\n                </Link>\r\n              </li>\r\n            )}\r\n          </div>\r\n\r\n          {currentUser ? (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/profile\"} className=\"nav-link\">\r\n                  {currentUser.username}\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\r\n                  LogOut\r\n                </a>\r\n              </li>\r\n            </div>\r\n          ) : (\r\n            <div className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/login\"} className=\"nav-link\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n\r\n              <li className=\"nav-item\">\r\n                <Link to={\"/register\"} className=\"nav-link\">\r\n                  Sign Up\r\n                </Link>\r\n              </li>\r\n            </div>\r\n          )}\r\n        </nav>\r\n\r\n        <div className=\"container mt-3\">\r\n          <Switch>\r\n            <Route exact path={[\"/\", \"/home\"]} component={Home} />\r\n            <Route exact path=\"/Player\" component={Player} />\r\n            <Route exact path=\"/login\" component={Login} />\r\n            <Route exact path=\"/register\" component={Register} />\r\n            <Route exact path=\"/profile\" component={Profile} />\r\n            <Route path=\"/user\" component={BoardUser} />\r\n            <Route path=\"/mod\" component={BoardModerator} />\r\n            <Route path=\"/admin\" component={BoardAdmin} />\r\n          </Switch>\r\n        </div>\r\n        \r\n        { /*<AuthVerify logOut={this.logOut}/> */ }\r\n      </div>\r\n      \r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ListItemContainer\":\"ListItem_ListItemContainer__MHdf4\",\"TextContainer\":\"ListItem_TextContainer__1RqY6\",\"ListItemImg\":\"ListItem_ListItemImg__2hKrc\",\"ArtistName\":\"ListItem_ArtistName__2vQdB\",\"SongName\":\"ListItem_SongName__1l3WT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TopBar\":\"Player_TopBar__bO1uL\",\"SongInfo\":\"Player_SongInfo__2aLf_\",\"PlayerControls\":\"Player_PlayerControls__qU71-\",\"PlayButton\":\"Player_PlayButton__1xNEO\",\"activeButton\":\"Player_activeButton__3tefC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ui-icon\":\"Button_ui-icon__3dl6Q\",\"player-flow-control\":\"Button_player-flow-control__RX3PV\",\"ui-icon-toggled\":\"Button_ui-icon-toggled__3hXvX\",\"iconToggled\":\"Button_iconToggled__TlSUk\",\"player-switch-control\":\"Button_player-switch-control__3caY2\",\"player-play-control\":\"Button_player-play-control__2gKAa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageTile\":\"ImageTile_ImageTile__2NOVj\"};"],"sourceRoot":""}